{"version":3,"sources":["components/courses/creatorView/CheckPoints.js","css/courses/creatorView/CheckPointsStyle.js"],"names":["CheckPoints","props","state","renderQRCodeList","bind","clickedqrCodesModal","removeModal","this","getCheckPoints","CheckPointsStyle","event","checkPoints","helpers","SubmitDataHelpers","postData","checkPointNo","firstCheckPoint","then","res","error","showAlert","console","log","forEach","checkPoint","code","eventName","courseType","point","setState","className","onClick","window","innerWidth","e","preventDefault","k","content","tbody","push","key","id","value","size","level","type","min","max","defaultValue","onChange","updateScore","onMouseDown","length","downloadQRCode","modal","document","createElement","onclick","localStorage","getItem","body","appendChild","ReactDOM","render","showModal","getElementById","remove","target","substring","sessionStorage","jszip","JSZip","folder","qrCodes","getElementsByTagName","Object","keys","i","base64URL","toDataURL","replace","file","base64","generateAsync","FileSaver","saveAs","React","Component","setStyle","eId","style","height","innerHeight","borderRadius","parseInt","offsetHeight","offsetWidth","checkpointsTable","eClass","offsetTop","ref","btn","setBtn","darkLightMode","userAgent","navigator","vendor","opera","test","addEventListener"],"mappings":"uVAWMA,G,wDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,GAEb,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,oBAAsB,EAAKA,oBAAoBD,KAAzB,gBAC3B,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBANL,E,gEAUdG,KAAKC,iBACLC,sB,yNAQIC,E,eAAYH,KAAKN,MAAMS,OACvBC,E,eAAkBJ,KAAKN,MAAMU,aAE7BC,EAAU,IAAIC,U,SACFD,EAAQE,SAAS,8BACjC,CACIC,aAAcJ,EAAYI,aAC1BC,gBAAiBL,EAAYK,kBAC9BC,MAAK,SAAAC,GACJ,OAAIA,EAAIC,OAYJC,oBAAUF,EAAIC,MAAO,KACrBE,QAAQC,IAAIJ,IACL,IAbPA,EAAIK,SAAQ,SAAAC,GACRA,EAAWC,MAAQ,IAAMf,EAAMgB,UAC/BF,EAAWC,MAAS,IAAMf,EAAMiB,WAChCH,EAAWC,MAAQ,IAAMd,EAAYK,gBACrCQ,EAAWC,MAAQ,IAAMd,EAAYI,aACrCS,EAAWC,MAAQ,IAAMD,EAAWI,SAGxC,EAAKC,SAAS,CAAClB,YAAaO,IACrBA,M,cAfXA,E,yBAuBGA,G,qIAIP,OACI,4BAAQY,UAAU,wBAAwBC,QAASxB,KAAKJ,kBAAxD,QACUI,KAAKN,MAAMU,YAAYI,aADjC,OAEKiB,OAAOC,WAAa,IAAK,uBAAGH,UAAU,kBAAsB,a,gFAKlDI,G,+FACnBA,EAAEC,iB,SAEsB5B,KAAKC,iB,OAK7B,IAAQ4B,KALJzB,E,OAEA0B,EAAU,GAEVC,EAAQ,G,WACJF,GACJ,IAAIZ,EAAab,EAAYyB,GAE7BE,EAAMC,KACF,yBAAKT,UAAU,yBAAyBU,IAAKhB,EAAWiB,GAAIC,MAAOlB,EAAWiB,IAC1E,yBAAKX,UAAU,6DACX,8BAAON,EAAWiB,KAEtB,yBAAKX,UAAU,6DACX,kBAAC,IAAD,CACIU,IAAKhB,EAAWiB,GAChBA,GAAIjB,EAAWiB,GACfC,MAAOlB,EAAWC,KAClBkB,KAAM,GACNC,MAAO,OAGf,yBAAKd,UAAU,6DACX,8BACI,2BACIe,KAAK,SAASC,IAAI,IAAIC,IAAI,KAAKC,aAAcxB,EAAWI,MACxDqB,SAAY,SAACf,GAAO,EAAKgB,YAAYhB,EAAGE,WArBnDzB,EAAa,EAAlByB,G,OA6BRC,EAAQE,KACJ,yBAAKC,IAAI,cAAcC,GAAG,cACtBX,UAAU,+CACVqB,YAAa5C,KAAKF,qBAElB,yBAAKyB,UAAU,mBACX,4BAAKvB,KAAKN,MAAMS,MAAMgB,WACtB,0CAAmBnB,KAAKN,MAAMS,MAAMiB,WAApC,gBAGJ,yBAAKG,UAAU,2EACX,yBAAKA,UAAU,qCAAf,aAA8DnB,EAAaA,EAAYyC,OAAS,IAAhG,gBACA,yBAAKtB,UAAU,wBACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,YAAf,MACA,yBAAKA,UAAU,YAAf,UACA,yBAAKA,UAAU,YAAf,WAGR,yBAAKW,GAAG,UAAUX,UAAU,8BACvBQ,IAIT,yBAAKR,UAAU,qDACX,4BAAQA,UAAU,wCAAwCC,QAASxB,KAAK8C,gBACnErB,OAAOC,WAAa,IAAK,WAAa,uBAAGH,UAAU,oBADxD,OAEKvB,KAAKN,MAAMU,YAAYI,aAF5B,iBASZuC,EAAQC,SAASC,cAAc,QAC7Bf,GAAK,aACXa,EAAMxB,UAAY,aAClBwB,EAAMG,QAAUlD,KAAKD,YAE8B,MAAhD0B,OAAO0B,aAAaC,QAAQ,mBAC3BL,EAAMxB,WAAa,oBAGvByB,SAASK,KAAKC,YAAYP,G,UACpBQ,IAASC,OAAO1B,EAASiB,G,QAC/B7C,oB,oJAKAF,KAAKsB,SAAL,eAAkBtB,KAAKL,MAAvB,eAA+B,aAAc,O,oCAMzCK,KAAKL,MAAM8D,UAGXzD,KAAKsB,SAAL,eAAkBtB,KAAKL,MAAvB,eAA+B,YAAc,QAF7CqD,SAASU,eAAe,cAAcC,W,kCAMlChC,EAAGE,GACX,IAAIzB,EAAcJ,KAAKL,MAAMS,YAC7BA,EAAYyB,GAAGR,MAAQM,EAAEiC,OAAOzB,MAChC/B,EAAYyB,GAAGX,KAAOd,EAAYyB,GAAGX,KAAK2C,UAAU,EAAGzD,EAAYyB,GAAGX,KAAK2B,OAAS,GAAK,IAAMlB,EAAEiC,OAAOzB,MAExGnC,KAAKsB,SAAS,CAAClB,YAAaA,M,gCAItBuB,EAAGE,M,uCAKT,IAAIV,EAAYM,OAAOqC,eAAeV,QAAQ,aAC1ChC,EAAaK,OAAOqC,eAAeV,QAAQ,cAC3CW,EAAQ,IAAIC,IACZC,EAASF,EAAME,OAAO,WAAa9C,EAAY,IAAMC,EAAY,KACjE8C,EAAUlB,SAASU,eAAe,WAAWS,qBAAqB,UAEtEC,OAAOC,KAAKH,GAASlD,SAAQ,SAAAsD,GACdtB,SAASC,cAAc,KAAlC,IACIsB,EAAYL,EAAQI,GAAGE,YAAYC,QAAQ,iCAAkC,IACjFR,EAAOS,KAAK,eAAgBJ,EAAI,OAAQC,EAAW,CAACI,QAAO,OAG/DZ,EAAMa,cAAc,CAACtC,KAAK,SACzB5B,MAAK,SAASoB,GAEX+C,IAAUC,OAAOhD,EAAS,WAAaX,EAAY,IAAMC,EAAa,gB,GA7LxD2D,IAAMC,YAoMjBvF,a,gCC/Mf,kBAoBA,SAASwF,IACL,IAAIC,cAAI,WACJ,OAAO,EAGXA,cAAI,eAAeC,MAAMC,OAA8B,GAArB3D,OAAO4D,YAAoB,KAE1D5D,OAAOC,WAAaD,OAAO4D,YAC1BH,cAAI,eAAeC,MAAMG,aAA2D,IAA5CC,SAASL,cAAI,eAAeM,cAAuB,KAE3FN,cAAI,eAAeC,MAAMG,aAA0D,IAA3CC,SAASL,cAAI,eAAeO,aAAsB,KAG9F,IAAIC,EAAmBC,iBAAO,oBAAoB,GAClDD,EAAiBP,MAAMC,OAAyG,IAA/FF,cAAI,eAAeU,UAAYV,cAAI,eAAeM,aAAeE,EAAiBE,WAAmB,KACtID,iBAAO,SAAS,GAAGR,MAAMC,OAAS,EAClCO,iBAAO,SAAS,GAAGR,MAAMC,OAAmF,GAAzEO,iBAAO,mBAAmB,GAAGC,UAAYD,iBAAO,SAAS,GAAGC,WAAiD,IAAhCF,EAAiBF,aAAsB,KACvJG,iBAAO,SAAS,GAAGR,MAAMC,OAASO,iBAAO,SAAS,GAAGH,aAAgBG,iBAAO,SAAS,GAAGH,aAAe,KAY3G,SAAgBK,GAEZ,IADA,IAAIC,EAAMH,iBAAOE,GACTvB,EAAI,EAAGA,EAAIwB,EAAIjD,OAAQyB,IAC3BwB,EAAIxB,GAAGa,MAAMG,aAAoC,IAArBQ,EAAI,GAAGL,YAAqB,KAb5DM,CAAO,OA3BI7F,UAVf,WAaI8F,wBAAc,eACdA,wBAAc,SACdA,wBAAc,UAbdf,IAEA,IAAIgB,EAAYC,UAAUD,WAAaC,UAAUC,QAAU1E,OAAO2E,MAC5D,WAAWC,KAAKJ,IAClBxE,OAAO6E,iBAAiB,SAAUrB,K","file":"static/js/36.84114f0a.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport QRCode from 'qrcode.react';\r\nimport JSZip from 'jszip';\r\nimport FileSaver from 'file-saver';\r\nimport {showAlert} from '../../Alert';\r\nimport SubmitDataHelpers from '../../helpers/SubmitDataHelpers';\r\n\r\nimport CheckPointsStyle from '../../../css/courses/creatorView/CheckPointsStyle';\r\nimport '../../../css/courses/creatorView/CheckPoints.css';\r\n\r\nclass CheckPoints extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n\r\n        this.renderQRCodeList = this.renderQRCodeList.bind(this);\r\n        this.clickedqrCodesModal = this.clickedqrCodesModal.bind(this);\r\n        this.removeModal = this.removeModal.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCheckPoints();\r\n        CheckPointsStyle();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        //CheckPointsStyle();\r\n    }\r\n\r\n    async getCheckPoints(){\r\n        let event = {...this.props.event};\r\n        let checkPoints = {...this.props.checkPoints};\r\n\r\n        let helpers = new SubmitDataHelpers;\r\n        let res = await helpers.postData('/checkpoints/getCheckPoints',\r\n        {\r\n            checkPointNo: checkPoints.checkPointNo,\r\n            firstCheckPoint: checkPoints.firstCheckPoint,\r\n        }).then(res => {\r\n            if(!res.error){\r\n                res.forEach(checkPoint => {\r\n                    checkPoint.code += '-' + event.eventName;\r\n                    checkPoint.code +=  '-' + event.courseType;\r\n                    checkPoint.code += '-' + checkPoints.firstCheckPoint;\r\n                    checkPoint.code += '-' + checkPoints.checkPointNo;\r\n                    checkPoint.code += '-' + checkPoint.point;\r\n                });\r\n                \r\n                this.setState({checkPoints: res});\r\n                return res;\r\n            } else {\r\n                showAlert(res.error, 5000);\r\n                console.log(res);\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return res;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <button className='button ciSubmit col-5' onClick={this.renderQRCodeList}>\r\n                Show {this.props.checkPoints.checkPointNo}&nbsp;\r\n                {window.innerWidth < 576? <i className='fas fa-qrcode'></i>: 'QRCodes'}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    async renderQRCodeList(e){\r\n        e.preventDefault();\r\n\r\n        let checkPoints = await this.getCheckPoints();\r\n\r\n        let content = [];\r\n\r\n        let tbody = [];\r\n        for(let k in checkPoints){\r\n            let checkPoint = checkPoints[k];\r\n\r\n            tbody.push(\r\n                <div className=\"checkpoint tr row py-2\" key={checkPoint.id} value={checkPoint.id}>\r\n                    <div className=\"td col-2 d-flex justify-content-center align-items-center\">\r\n                        <span>{checkPoint.id}</span>\r\n                    </div>\r\n                    <div className=\"td col-6 d-flex justify-content-center align-items-center\">\r\n                        <QRCode\r\n                            key={checkPoint.id}\r\n                            id={checkPoint.id}\r\n                            value={checkPoint.code}\r\n                            size={50}\r\n                            level={\"H\"}   \r\n                        />\r\n                    </div>\r\n                    <div className=\"td col-4 d-flex justify-content-center align-items-center\">\r\n                        <span>\r\n                            <input \r\n                                type=\"number\" min=\"0\" max=\"10\" defaultValue={checkPoint.point}\r\n                                onChange = {(e) => {this.updateScore(e, k)}}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        content.push(\r\n            <div key=\"checkpoints\" id=\"checkpoints\" \r\n                className=\"checkpoints card shadow-lg pt-4 px-3 px-sm-4\" \r\n                onMouseDown={this.clickedqrCodesModal}\r\n            >\r\n                <div className=\"card-title mt-3\">\r\n                    <h2>{this.props.event.eventName}</h2>\r\n                    <h4>&#9827;&nbsp; {this.props.event.courseType} &nbsp;&#9827;</h4>\r\n                </div>\r\n\r\n                <div className=\"checkpointsTable mx-auto mb-4 mt-2 mt-sm-4 shadow px-2 pt-2 pb-0 border\">\r\n                    <div className=\"tcaption text-left pl-1 pt-1 pb-2\">QRCodes ( {checkPoints? checkPoints.length : '0'} qrCode(s) )</div>\r\n                    <div className=\"table mx-auto border\">\r\n                        <div className=\"thead col-12\">\r\n                            <div className=\"tr row py-3\">\r\n                                <div className=\"th col-2\">ID</div>\r\n                                <div className=\"th col-6\">QRcode</div>\r\n                                <div className=\"th col-4\">Point</div>\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"qrCodes\" className=\"tbody col-12 overflow-auto\">\r\n                            {tbody}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"downloadqrCodes col-12 d-flex justify-content-end\">\r\n                        <button className=\"btn border-bottom col-8 col-sm-5 px-2\" onClick={this.downloadQRCode}>\r\n                            {window.innerWidth > 576? 'Download' : <i className='fas fa-download'></i>}&nbsp;\r\n                            {this.props.checkPoints.checkPointNo} QRCodes \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>   \r\n        );\r\n        \r\n        let modal = document.createElement(\"div\");\r\n        modal.id = \"popUpModal\";\r\n        modal.className = \"popUpModal\";\r\n        modal.onclick = this.removeModal;\r\n\r\n        if(window.localStorage.getItem('darkThemeMode') == 'on'){\r\n            modal.className += \" dark-popUpModal\";   \r\n        }\r\n\r\n        document.body.appendChild(modal);\r\n        await ReactDOM.render(content, modal);\r\n        CheckPointsStyle();\r\n        //this.downloadQRCode();\r\n    }\r\n\r\n    clickedqrCodesModal(){\r\n        this.setState({...this.state, ['showModal']: true});\r\n        //console.log(this.state.showModal);\r\n    }\r\n\r\n    removeModal(){\r\n        //console.log(this.state.showModal);\r\n        if(!this.state.showModal){\r\n            document.getElementById(\"popUpModal\").remove();\r\n        } else{\r\n            this.setState({...this.state, ['showModal']: null});\r\n        }\r\n    }\r\n\r\n    updateScore(e, k){\r\n        let checkPoints = this.state.checkPoints;\r\n        checkPoints[k].point = e.target.value;\r\n        checkPoints[k].code = checkPoints[k].code.substring(0, checkPoints[k].code.length - 2) + '-' + e.target.value;\r\n\r\n        this.setState({checkPoints: checkPoints});\r\n        //console.log(this.state.checkPoints);\r\n    }\r\n\r\n    updateMsg(e, k){\r\n        //console.log(e.target.value);\r\n    }\r\n\r\n    downloadQRCode(){\r\n        let eventName = window.sessionStorage.getItem(\"eventName\");\r\n        let courseType = window.sessionStorage.getItem(\"courseType\");\r\n        let jszip = new JSZip();\r\n        let folder = jszip.folder(\"QRCodes(\" + eventName + \"-\" + courseType +\")\");\r\n        let qrCodes = document.getElementById(\"qrCodes\").getElementsByTagName(\"canvas\");\r\n        //console.log(qrCodes);\r\n        Object.keys(qrCodes).forEach(i =>{\r\n            let link = document.createElement('a');\r\n            let base64URL = qrCodes[i].toDataURL().replace(/^data:image\\/(png|jpg);base64,/, \"\")\r\n            folder.file('check_point_'+ i + '.jpg', base64URL, {base64:true})\r\n        });\r\n\r\n        jszip.generateAsync({type:\"blob\"})\r\n        .then(function(content) {\r\n            // see FileSaver.js\r\n            FileSaver.saveAs(content, \"QRCodes(\" + eventName + \"-\" + courseType + \").zip\");\r\n        });\r\n\r\n        //document.getElementById(\"courseQRCodes\").remove();\r\n    }\r\n}\r\n\r\nexport default CheckPoints;","import {eId, eClass, darkLightMode} from '../../../components/helpers/StylingHelpers';\n\nfunction CheckPointsStyle(){\n    setDarkLightMode();\n    setStyle();\n\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    if (!(/android/i.test(userAgent))) {\n        window.addEventListener('resize', setStyle);\n    }\n}\n\nexport default CheckPointsStyle;\n\nfunction setDarkLightMode(){\n    darkLightMode(\"checkpoints\");\n    darkLightMode('input');\n    darkLightMode('button');\n}\n\nfunction setStyle(){\n    if(!eId('qrCodes')){\n        return false;\n    }\n\n    eId(\"checkpoints\").style.height = window.innerHeight * 0.8 + 'px';\n\n    if(window.innerWidth > window.innerHeight){\n        eId('checkpoints').style.borderRadius = parseInt(eId('checkpoints').offsetHeight) * 0.07 + 'px';\n    } else {\n        eId('checkpoints').style.borderRadius = parseInt(eId('checkpoints').offsetWidth) * 0.07 + 'px';\n    }\n\n    let checkpointsTable = eClass('checkpointsTable')[0];\n    checkpointsTable.style.height = (eId(\"checkpoints\").offsetTop + eId(\"checkpoints\").offsetHeight - checkpointsTable.offsetTop) * 0.8 + 'px';\n    eClass('table')[0].style.height = 0 ;\n    eClass('table')[0].style.height = (eClass('downloadqrCodes')[0].offsetTop - eClass('table')[0].offsetTop) * 1 - checkpointsTable.offsetHeight * 0.03 + 'px';\n    eClass('tbody')[0].style.height = eClass('table')[0].offsetHeight -  eClass('thead')[0].offsetHeight + 'px';\n\n    setBtn('btn');\n}\n\nfunction setInput(ref){\n    let input = eClass(ref);\n    for(let i = 0; i < input.length; i++){\n        input[i].style.borderRadius = input[0].offsetWidth * 0.05 + 'px';\n    }\n}\n\nfunction setBtn(ref){\n    let btn = eClass(ref);\n    for(let i = 0; i < btn.length; i++){\n        btn[i].style.borderRadius = btn[0].offsetWidth * 0.15 + 'px';\n    }\n}"],"sourceRoot":""}