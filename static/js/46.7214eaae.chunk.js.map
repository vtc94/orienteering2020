{"version":3,"sources":["css/courses/CourseResultStyle.js"],"names":["setStyle","checkPointNo","eId","style","height","offsetTop","eClass","offsetHeight","bars","i","checkpoints","getElementsByClassName","j","width","offsetWidth","parseInt","borderLeft","length","borderRight","getElementsByTagName","onmouseenter","window","sessionStorage","setItem","setTooltip","onmouseleave","removeItem","setBar","checkpoint","tooltip","showTooltip","top","scrollTop","left","offsetLeft","scrollLeft","visibility","CourseResultStyle","darkLightMode","userAgent","navigator","vendor","opera","test","addEventListener"],"mappings":"kGAAA,kBAoBA,SAASA,EAASC,GAEd,GADAC,cAAI,gBAAgBC,MAAMC,OAASF,cAAI,OAAOG,UAAYH,cAAI,gBAAgBG,UAAY,MACtFH,cAAI,gBACJ,OAAO,EAGXA,cAAI,gBAAgBC,MAAMC,OAAkE,KAAxDF,cAAI,OAAOG,UAAYH,cAAI,gBAAgBG,WAAoB,KACnGC,iBAAO,SAAS,GAAGH,MAAMC,OAA6G,KAAnGF,cAAI,gBAAgBG,UAAYH,cAAI,gBAAgBK,aAAeD,iBAAO,SAAS,GAAGD,WAAmB,KAKhJ,SAAgBJ,GACZ,IAAIK,iBAAO,OACP,OAAO,EAKX,IAFA,IAAIE,EAAOF,iBAAO,OALO,WAOjBG,GAGJ,IAFA,IAAIC,EAAcF,EAAKC,GAAGE,uBAAuB,cAR5B,WAUbC,GACJF,EAAYE,GAAGT,MAAMU,MAAQL,EAAKC,GAAGK,aAAaC,SAASd,GAAgB,GAAK,KAChFS,EAAYE,GAAGT,MAAMC,OAAS,OAEtB,GAALQ,IACCF,EAAYE,GAAGT,MAAMa,WAAa,qBAGnCJ,GAAKF,EAAYO,OAAS,IACzBP,EAAYE,GAAGT,MAAMe,YAAc,oBACnCR,EAAYE,GAAGO,qBAAqB,OAAO,GAAGhB,MAAMe,YAAc,GAGtER,EAAYE,GAAGQ,aAAe,WAC1BC,OAAOC,eAAeC,QAAQ,cAAe,KAC7CC,EAAWd,EAAYE,KAG3BF,EAAYE,GAAGa,aAAe,WAC1BJ,OAAOC,eAAeI,WAAW,eACjCF,EAAWd,EAAYE,MApBvBA,EAAI,EAAGA,EAAIF,EAAYO,OAAQL,IAAM,EAArCA,IAHJH,EAAI,EAAGA,EAAID,EAAKS,OAAQR,IAAM,EAA9BA,GAVRkB,CAAO1B,GAwCX,SAASuB,EAAWI,GAChB,IAAIC,EAAUD,EAAWjB,uBAAuB,eAAe,GAEvB,GAArCU,OAAOC,eAAeQ,aACrBD,EAAQ1B,MAAM4B,IAAMF,EAAQxB,UAAmC,GAAvBwB,EAAQtB,aAAqBD,iBAAO,SAAS,GAAG0B,UAAY,KACpGH,EAAQ1B,MAAM8B,KAAOJ,EAAQK,WAAmC,GAAtBL,EAAQf,YAAoBR,iBAAO,SAAS,GAAG6B,WAAa,KACtGN,EAAQ1B,MAAMiC,WAAa,YAE3BP,EAAQ1B,MAAM4B,IAAM,UACpBF,EAAQ1B,MAAM8B,KAAO,UACrBJ,EAAQ1B,MAAMiC,WAAa,UAjEpBC,UAZf,SAA2BpC,GAevBqC,wBAAc,gBAbdtC,EAASC,GAET,IAAIsC,EAAYC,UAAUD,WAAaC,UAAUC,QAAUpB,OAAOqB,MAC5D,WAAWC,KAAKJ,IAClBlB,OAAOuB,iBAAiB,UAAU,WAC9B5C,EAASC","file":"static/js/46.7214eaae.chunk.js","sourcesContent":["import {eId, eClass, darkLightMode, randomColor} from '../../components/helpers/StylingHelpers';\n\nfunction CourseResultStyle(checkPointNo){\n    setDarkLightMode();\n    setStyle(checkPointNo);\n\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    if (!(/android/i.test(userAgent))) {\n        window.addEventListener('resize', function(){\n            setStyle(checkPointNo);\n        });\n    }\n}\n\nexport default CourseResultStyle;\n\nfunction setDarkLightMode(){\n    darkLightMode('courseResult');\n}\n\nfunction setStyle(checkPointNo){\n    eId('courseResult').style.height = eId('nav').offsetTop - eId('courseResult').offsetTop + 'px';\n    if(!eId('resultsTable')){\n        return false;\n    }\n\n    eId('resultsTable').style.height = (eId('nav').offsetTop - eId('resultsTable').offsetTop) * 0.99 + 'px';\n    eClass('table')[0].style.height = (eId('resultsTable').offsetTop + eId('resultsTable').offsetHeight - eClass('table')[0].offsetTop) * .97 + 'px';\n\n    setBar(checkPointNo);\n}\n\nfunction setBar(checkPointNo){\n    if(!eClass('bar')){\n        return false;\n    }\n\n    let bars = eClass('bar');\n    \n    for(let i = 0; i < bars.length; i++) {\n        let checkpoints = bars[i].getElementsByClassName('checkpoint');\n        //console.log(checkpoints.length);\n        for(let j = 0; j < checkpoints.length; j++) {\n            checkpoints[j].style.width = bars[i].offsetWidth/(parseInt(checkPointNo) + 1) + 'px';\n            checkpoints[j].style.height = '15px';\n            \n            if(j == 0){\n                checkpoints[j].style.borderLeft = '2px solid #5aa2f9';\n            }\n            \n            if(j == checkpoints.length - 1){\n                checkpoints[j].style.borderRight = '2px solid #5aa2f9';\n                checkpoints[j].getElementsByTagName('div')[0].style.borderRight = 0;\n            }\n\n            checkpoints[j].onmouseenter = function(){\n                window.sessionStorage.setItem('showTooltip', '1');\n                setTooltip(checkpoints[j]);\n            }\n\n            checkpoints[j].onmouseleave = function(){\n                window.sessionStorage.removeItem('showTooltip');\n                setTooltip(checkpoints[j]);\n            };\n            \n        }\n    }\n}\n\nfunction setTooltip(checkpoint){\n    let tooltip = checkpoint.getElementsByClassName('tooltiptext')[0];\n    \n    if(window.sessionStorage.showTooltip == 1){\n        tooltip.style.top = tooltip.offsetTop - tooltip.offsetHeight * 0.7 - eClass('tbody')[0].scrollTop + 'px';\n        tooltip.style.left = tooltip.offsetLeft - tooltip.offsetWidth * 0.1 - eClass('tbody')[0].scrollLeft + 'px';\n        tooltip.style.visibility = 'visible';\n    } else {\n        tooltip.style.top = 'initial';\n        tooltip.style.left = 'initial';\n        tooltip.style.visibility = 'hidden';\n    }\n}"],"sourceRoot":""}