{"version":3,"sources":["css/courses/creatorView/CheckPointsStyle.js"],"names":["setStyle","eId","style","height","window","innerHeight","innerWidth","borderRadius","parseInt","offsetHeight","offsetWidth","checkpointsTable","eClass","offsetTop","ref","btn","i","length","setBtn","CheckPointsStyle","darkLightMode","userAgent","navigator","vendor","opera","test","addEventListener"],"mappings":"kGAAA,kBAoBA,SAASA,IACL,IAAIC,cAAI,WACJ,OAAO,EAGXA,cAAI,eAAeC,MAAMC,OAA8B,GAArBC,OAAOC,YAAoB,KAE1DD,OAAOE,WAAaF,OAAOC,YAC1BJ,cAAI,eAAeC,MAAMK,aAA2D,IAA5CC,SAASP,cAAI,eAAeQ,cAAuB,KAE3FR,cAAI,eAAeC,MAAMK,aAA0D,IAA3CC,SAASP,cAAI,eAAeS,aAAsB,KAG9F,IAAIC,EAAmBC,iBAAO,oBAAoB,GAClDD,EAAiBT,MAAMC,OAAyG,IAA/FF,cAAI,eAAeY,UAAYZ,cAAI,eAAeQ,aAAeE,EAAiBE,WAAmB,KACtID,iBAAO,SAAS,GAAGV,MAAMC,OAAS,EAClCS,iBAAO,SAAS,GAAGV,MAAMC,OAAmF,GAAzES,iBAAO,mBAAmB,GAAGC,UAAYD,iBAAO,SAAS,GAAGC,WAAiD,IAAhCF,EAAiBF,aAAsB,KACvJG,iBAAO,SAAS,GAAGV,MAAMC,OAASS,iBAAO,SAAS,GAAGH,aAAgBG,iBAAO,SAAS,GAAGH,aAAe,KAY3G,SAAgBK,GAEZ,IADA,IAAIC,EAAMH,iBAAOE,GACTE,EAAI,EAAGA,EAAID,EAAIE,OAAQD,IAC3BD,EAAIC,GAAGd,MAAMK,aAAoC,IAArBQ,EAAI,GAAGL,YAAqB,KAb5DQ,CAAO,OA3BIC,UAVf,WAaIC,wBAAc,eACdA,wBAAc,SACdA,wBAAc,UAbdpB,IAEA,IAAIqB,EAAYC,UAAUD,WAAaC,UAAUC,QAAUnB,OAAOoB,MAC5D,WAAWC,KAAKJ,IAClBjB,OAAOsB,iBAAiB,SAAU1B","file":"static/js/48.838acc46.chunk.js","sourcesContent":["import {eId, eClass, darkLightMode} from '../../../components/helpers/StylingHelpers';\n\nfunction CheckPointsStyle(){\n    setDarkLightMode();\n    setStyle();\n\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    if (!(/android/i.test(userAgent))) {\n        window.addEventListener('resize', setStyle);\n    }\n}\n\nexport default CheckPointsStyle;\n\nfunction setDarkLightMode(){\n    darkLightMode(\"checkpoints\");\n    darkLightMode('input');\n    darkLightMode('button');\n}\n\nfunction setStyle(){\n    if(!eId('qrCodes')){\n        return false;\n    }\n\n    eId(\"checkpoints\").style.height = window.innerHeight * 0.8 + 'px';\n\n    if(window.innerWidth > window.innerHeight){\n        eId('checkpoints').style.borderRadius = parseInt(eId('checkpoints').offsetHeight) * 0.07 + 'px';\n    } else {\n        eId('checkpoints').style.borderRadius = parseInt(eId('checkpoints').offsetWidth) * 0.07 + 'px';\n    }\n\n    let checkpointsTable = eClass('checkpointsTable')[0];\n    checkpointsTable.style.height = (eId(\"checkpoints\").offsetTop + eId(\"checkpoints\").offsetHeight - checkpointsTable.offsetTop) * 0.8 + 'px';\n    eClass('table')[0].style.height = 0 ;\n    eClass('table')[0].style.height = (eClass('downloadqrCodes')[0].offsetTop - eClass('table')[0].offsetTop) * 1 - checkpointsTable.offsetHeight * 0.03 + 'px';\n    eClass('tbody')[0].style.height = eClass('table')[0].offsetHeight -  eClass('thead')[0].offsetHeight + 'px';\n\n    setBtn('btn');\n}\n\nfunction setInput(ref){\n    let input = eClass(ref);\n    for(let i = 0; i < input.length; i++){\n        input[i].style.borderRadius = input[0].offsetWidth * 0.05 + 'px';\n    }\n}\n\nfunction setBtn(ref){\n    let btn = eClass(ref);\n    for(let i = 0; i < btn.length; i++){\n        btn[i].style.borderRadius = btn[0].offsetWidth * 0.15 + 'px';\n    }\n}"],"sourceRoot":""}