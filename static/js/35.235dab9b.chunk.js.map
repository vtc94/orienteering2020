{"version":3,"sources":["components/courses/playerView/CourseScan.js","css/courses/playerView/CourseScanStyle.js"],"names":["CourseScan","props","state","handleResult","bind","countTimeLeft","cookieHelpers","CookieHelpers","course","this","setState","event","type","username","getCookie","checkPointId","firstCheckPoint","checkPointNo","qrCode","score","timeTaken","speed","scanNo","position","SubmitDataHelpers","postData","then","res","console","log","error","showAlert","h","parseInt","m","s","self","document","getElementById","scanner","Instascan","Scanner","video","scanPeriod","mirror","addListener","content","Camera","getCameras","cameras","length","start","window","alert","setInterval","sessionStorage","setItem","CourseScanStyle","renderResult","clearInterval","id","className","calculateTimeTaken","startTime","split","date","Date","getHours","getMinutes","getSeconds","endTime","timeLeft","resultComponent","push","key","ReactDOM","render","React","Component","setStyle","eId","style","height","innerHeight","ScanStyle","darkLightMode","userAgent","navigator","vendor","opera","test","addEventListener"],"mappings":"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","file":"static/js/35.235dab9b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Instascan from 'instascan-v2';\r\nimport {showAlert} from '../../Alert';\r\nimport SubmitDataHelpers from '../../helpers/SubmitDataHelpers';\r\nimport CookieHelpers from '../../helpers/CookieHelpers';\r\n\r\nimport CourseScanStyle from '../../../css/courses/playerView/CourseScanStyle';\r\nimport '../../../css/courses/playerView/CourseScan.css';\r\n\r\nclass CourseScan extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.handleResult = this.handleResult.bind(this);\r\n        this.countTimeLeft = this.countTimeLeft.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        let cookieHelpers = new CookieHelpers;\r\n        let course = {...this.props.course};\r\n        \r\n        this.setState({\r\n            event: course.event,\r\n            course: course.type,\r\n            username: cookieHelpers.getCookie(\"username\"),\r\n            checkPointId: course.firstCheckPoint - 1,\r\n            checkPointNo: course.checkPointNo,\r\n            firstCheckPoint: course.firstCheckPoint,\r\n            qrCode: '',\r\n            score: 0,\r\n            timeTaken: 0,\r\n            speed: 0,\r\n            scanNo: 0,\r\n            position: 0,\r\n        });       \r\n        \r\n        let helpers = new SubmitDataHelpers;\r\n        helpers.postData('/results/lastScan/', \r\n        {\r\n            event: this.props.course.event,\r\n            type: this.props.course.type,\r\n            username: cookieHelpers.getCookie(\"username\"),\r\n        }).then((res) => {\r\n            console.log(res); // JSON data parsed by `response.json()` call\r\n            if(res.error){\r\n                console.log(res.error);\r\n                showAlert(res.error, 5000);\r\n            } else {\r\n                let h = parseInt(res.timeTaken/3600);\r\n                let m = parseInt((res.timeTaken - h*3600)/60);\r\n                let s = res.timeTaken - h * 3600 - m * 60;\r\n\r\n                h = h < 10? '0' + h : h;\r\n                h = h == 0? '' : h + ' h ';\r\n                m = m < 10? '0' + m + ' m ': m + ' m ';\r\n                s = s < 10? '0' + s + ' s': s + ' s';\r\n\r\n                this.setState({\r\n                    checkPointId: res.checkPointId,\r\n                    score: res.score,\r\n                    timeTaken: (h + m + s),\r\n                    scanNo: res.scanNo,\r\n                    position: res.position,\r\n                }); \r\n                //window.location.reload();\r\n                console.log(this.state);\r\n            }\r\n        });\r\n        \r\n        var self =this;\r\n        if(document.getElementById('preview')){\r\n            let scanner = new Instascan.Scanner({ video: document.getElementById('preview'), scanPeriod: 5, mirror: false, });\r\n                scanner.addListener('scan', function (content) {\r\n                    self.setState({...self.state, ['qrCode']: content});\r\n                    self.handleResult();\r\n                });\r\n\r\n            Instascan.Camera.getCameras().then(function (cameras) {\r\n                if (cameras.length > 0) {\r\n                    scanner.start(cameras[0]);\r\n                } else {\r\n                    window.alert(\"No camera found\");\r\n                }\r\n            });\r\n        }\r\n\r\n        let countTimeLeft = window.setInterval(this.countTimeLeft,1000);\r\n        window.sessionStorage.setItem('countTimeLeft', countTimeLeft);\r\n\r\n        CourseScanStyle();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(document.getElementById('scanResults')){\r\n            this.renderResult();\r\n        }\r\n        \r\n        CourseScanStyle();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(window.sessionStorage.countTimeLeft);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <video id=\"preview\"></video>\r\n                <div id=\"scanResults\" className=\"scanResults col-8 col-sm-6 mx-auto justify-content-center py-4 shadow\">\r\n                    <h4 className='col-12 mb-3'>Result</h4>\r\n                    <div className='col-10 d-flex flex-row justify-content-center mx-auto p-3 shadow'>\r\n                        <div className='px-1'>\r\n                            <div className='text-left'>Checkpoint No</div>\r\n                            <div className='text-left'>Number of Scans</div>\r\n                            <div className='text-left'>Time Taken</div>\r\n                            <div className='text-left'>{this.state.course == 'Score'? 'Score' : ''}</div>\r\n                            <div className='text-left'>Position</div>\r\n                            <div className='text-left'>Time Left</div>\r\n                        </div>\r\n                        <div id='result' className='result px-1'></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleResult(){\r\n        console.log(this.state);\r\n\r\n        let helpers = new SubmitDataHelpers;\r\n        helpers.postData('/results/addResult/', \r\n        {\r\n            event: this.state.event,\r\n            type: this.state.course,\r\n            username: this.state.username,\r\n            checkPointNo: this.state.checkPointNo,\r\n            firstCheckPoint: this.state.firstCheckPoint,\r\n            checkPointId: this.state.checkPointId,\r\n            qrCode: this.state.qrCode,\r\n            score: this.state.score,\r\n            timeTaken: this.calculateTimeTaken(),\r\n            scanNo: this.state.scanNo,\r\n        }).then((res) => {\r\n            console.log(res); // JSON data parsed by `response.json()` call\r\n            if(res.error){\r\n                console.log(res.error);\r\n                showAlert(res.error, 5000);\r\n                //alert(res.error);\r\n                this.setState({error: res.error});\r\n                console.log(this.state);\r\n            } else {\r\n                let h = parseInt(res.timeTaken/3600);\r\n                let m = parseInt((res.timeTaken - h*3600)/60);\r\n                let s = res.timeTaken - h * 3600 - m * 60;\r\n\r\n                h = h < 10? '0' + h : h;\r\n                h = h == 0? '' : h + ' h ';\r\n                m = m < 10? '0' + m + ' m ': m + ' m ';\r\n                s = s < 10? '0' + s + ' s': s + ' s';\r\n\r\n                this.setState({\r\n                    checkPointId: res.checkPointId,\r\n                    score: res.score,\r\n                    timeTaken: (h + m + s),\r\n                    scanNo: res.scanNo,\r\n                    position: res.position,\r\n                }); \r\n                //window.location.reload();\r\n                console.log(this.state);\r\n            }\r\n        });\r\n    }\r\n\r\n    calculateTimeTaken(){\r\n        let startTime = this.props.course.startTime;\r\n        startTime = startTime.split(\":\");\r\n        startTime = startTime[0]*3600 + startTime[1]*60;\r\n        let date = new Date();\r\n        let currentTime =  date.getHours()*3600 + date.getMinutes()*60 + date.getSeconds();\r\n\r\n        return (currentTime - startTime); \r\n    }\r\n\r\n    countTimeLeft(){\r\n        let endTime = this.props.course.endTime;\r\n\r\n        endTime = endTime.split(\":\");\r\n        endTime = endTime[0]*3600 + endTime[1]*60;\r\n        \r\n        let date = new Date();\r\n        let currentTime =  date.getHours()*3600 + date.getMinutes()*60 + date.getSeconds();\r\n    \r\n        let timeLeft = endTime - currentTime;\r\n\r\n        let h = parseInt(timeLeft/3600);\r\n        let m = parseInt((timeLeft - h*3600)/60);\r\n        let s = timeLeft - h * 3600 - m * 60;\r\n\r\n        h = h < 10? '0' + h : h;\r\n        h = h == 0? '' : h + ' : ';\r\n        m = m < 10? '0' + m + ' : ': m + ' : ';\r\n        s = s < 10? '0' + s : s;\r\n        \r\n        timeLeft = h + m + s;\r\n\r\n        this.setState({timeLeft: timeLeft});\r\n    }\r\n\r\n    renderResult(){\r\n        let resultComponent = [];\r\n\r\n        if(this.state.scanNo && this.state.scanNo > 0){\r\n            resultComponent.push(\r\n                <div key='result'>\r\n                    <div className='text-left'>: {this.state.checkPointId - this.state.firstCheckPoint + 1}</div>\r\n                    <div className='text-left'>: {this.state.scanNo}</div>\r\n                    <div className='text-left'>: {this.state.timeTaken}</div>\r\n                    <div className='text-left'>{this.state.course == 'Score'? (': ' + this.state.score) : ''}</div>\r\n                    <div className='text-left'>: {this.state.position}</div>\r\n                    <div className='text-left'>: {this.state.timeLeft}</div>\r\n                </div>\r\n            );\r\n        } else {\r\n            resultComponent.push(\r\n                <div key='result'>\r\n                    <div>: --</div>\r\n                    <div>: --</div>\r\n                    <div>: --</div>\r\n                    <div>{this.state.course == 'Score'? ': --' : ''}</div>\r\n                    <div>: --</div>\r\n                    <div>: --</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        ReactDOM.render(resultComponent, document.getElementById('result'));\r\n    }\r\n}\r\n\r\nexport default CourseScan;","import {eId, eClass, darkLightMode} from '../../../components/helpers/StylingHelpers';\n\nfunction ScanStyle(){\n    setDarkLightMode();\n    setStyle();\n\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    if (!(/android/i.test(userAgent))) {\n        window.addEventListener('resize', setStyle);\n    }\n}\n\nexport default ScanStyle;\n\nfunction setDarkLightMode(){\n    darkLightMode(\"scanResults\");\n}\n\nfunction setStyle(){\n    eId('preview').style.height = window.innerHeight + 'px';\n}"],"sourceRoot":""}