{"version":3,"sources":["components/Alert.js","components/helpers/SortingHelpers.js","components/helpers/TimeHelpers.js","components/courses/creatorView/CourseScan.js","css/courses/creatorView/CourseScanStyle.js"],"names":["showAlert","ref","showTime","document","getElementById","removeAlert","window","sessionStorage","getItem","clearTimeout","remove","div","createElement","id","innerHTML","body","appendChild","setTimeout","setItem","SortingHelpers","swap","items","leftIndex","rightIndex","temp","valueOf","item","re","split","i","forEach","r","prototype","findMax","max","val","Number","findMin","min","quickSort","left","right","index","length","pivot","Math","floor","l","partition","TimeHelpers","sToHms","seconds","time","h","parseInt","m","s","full","short","CourseScan","props","state","countTimeLeft","bind","this","renderResults","interval","setInterval","CourseScanStyle","course","checkPointNo","clearInterval","className","timeLeft","content","SubmitDataHelpers","postData","event","type","then","res","error","sortingHelpers","highestScanNo","scanNo","tr","results","push","count","td","minResult","finalTimeTaken","timeTaken","key","username","innerWidth","score","sortedRes","bar","speed","splice","indexOf","setState","endTime","date","Date","getHours","getMinutes","getSeconds","React","Component","setStyle","eId","style","height","offsetTop","eClass","bars","checkpoints","getElementsByClassName","j","width","offsetWidth","borderLeft","borderRight","getElementsByTagName","onmouseenter","setTooltip","onmouseleave","removeItem","setBar","checkpoint","tooltip","showTooltip","top","offsetHeight","scrollTop","offsetLeft","scrollLeft","visibility","darkLightMode","userAgent","navigator","vendor","opera","test","addEventListener"],"mappings":"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","file":"static/js/11.d173efa8.chunk.js","sourcesContent":["let showAlert = function showAlert(ref, showTime){\n    if(document.getElementById('error')){\n        let removeAlert = window.sessionStorage.getItem(\"removeAlert\");\n        clearTimeout(removeAlert);\n        document.getElementById('error').remove();\n    }\n\n    let div = document.createElement('div');\n    div.id = 'error';\n    div.innerHTML = ''\n                + '<div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\" style=\"text-align:center\">'\n                +    ref\n                +    '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">'\n                +    '<span aria-hidden=\"true\">&times;</span>'\n                +    '</button>'\n                + '</div>';\n    document.body.appendChild(div);\n\n    if(showTime != -1){\n        let removeAlert = setTimeout(function(){\n            if(document.getElementById('error')){\n                document.getElementById('error').remove();\n            }\n        }, showTime);\n\n        window.sessionStorage.setItem(\"removeAlert\", removeAlert);\n    }\n}\n\nexport {showAlert};","class SortingHelpers{\r\n\r\n}\r\n\r\nexport default SortingHelpers;\r\n\r\nSortingHelpers.prototype.findMax = function findMax(items, ref){\r\n    let max;\r\n    let i;\r\n\r\n    items.forEach(item => {\r\n        let val = Number(valueOf(item, ref));\r\n\r\n        if(max == null){\r\n            max = val;\r\n            i = item;\r\n        } else {\r\n            if(max < val){\r\n                max = val;\r\n                i = item;\r\n            }\r\n        }\r\n    });\r\n\r\n    return i;\r\n}\r\n\r\nSortingHelpers.prototype.findMin = function findMin(items, ref){\r\n    let min;\r\n    let i = 0;\r\n\r\n    items.forEach(item => {\r\n        let val = Number(valueOf(item, ref));\r\n        \r\n        if(min == null){\r\n            min = val;\r\n            i = item;\r\n        } else {\r\n            if(min > val){\r\n                min = val;\r\n                i = item;\r\n            }\r\n        }\r\n    });\r\n\r\n    return i;\r\n}\r\n\r\nSortingHelpers.prototype.quickSort = function quickSort(items, left, right, ref){\r\n    var index;\r\n    if (items.length > 1) {\r\n        index = partition(items, left, right, ref); //index returned from partition\r\n        if (left < index - 1) { //more elements on the left side of the pivot\r\n            quickSort(items, left, index - 1, ref);\r\n        }\r\n        if (index < right) { //more elements on the right side of the pivot\r\n            quickSort(items, index, right, ref);\r\n        }\r\n    }\r\n    \r\n    return items;\r\n}\r\n\r\nfunction partition(items, left, right, ref) {\r\n    var pivot   = items[Math.floor((right + left) / 2)], ref, //middle element\r\n        l       = left, //left pointer\r\n        r       = right; //right pointer\r\n    while (l <= r) {\r\n        while (valueOf(items[l], ref) < valueOf(pivot, ref)) {\r\n            l++;\r\n        }\r\n        while (valueOf(items[r], ref) > valueOf(pivot, ref)) {\r\n            r--;\r\n        }\r\n        if (l <= r) {\r\n            swap(items, l, r); //sawpping two elements\r\n            l++;\r\n            r--;\r\n        }\r\n    }\r\n    return l;\r\n}\r\n\r\nfunction swap(items, leftIndex, rightIndex){\r\n    var temp = items[leftIndex];\r\n    items[leftIndex] = items[rightIndex];\r\n    items[rightIndex] = temp;\r\n}\r\n\r\nfunction valueOf(item, ref){\r\n    let re = ref.split('/');\r\n    let i = item;\r\n\r\n    re.forEach(r => {\r\n        i = i[r];\r\n    })\r\n\r\n    return i;\r\n}","class TimeHelpers{\n\n}\n\nexport default TimeHelpers;\n\nTimeHelpers.prototype.sToHms = function(seconds){\n    let time = {};\n\n    let h = parseInt(seconds/3600);\n    let m = parseInt((seconds - h*3600)/60);\n    let s = seconds - h * 3600 - m * 60;\n    \n    h = h < 10? '0' + h : h;\n    m = m < 10? '0' + m : m;\n    s = s < 10? '0' + s : s;\n\n    time = {\n        h: h,\n        m: m,\n        s: s,\n    }\n\n    time.full = h + ':' + m + ':' + s;\n    \n    h = h == 0? '' : h + ':';\n    m = m == 0? '' : m + ':';\n\n    time.short = h + m + s;\n\n    return time;\n}","import React from 'react';\r\nimport {showAlert} from '../../Alert';\r\nimport SubmitDataHelpers from '../../helpers/SubmitDataHelpers';\r\nimport SortingHelpers from '../../helpers/SortingHelpers';\r\nimport TimeHelpers from '../../helpers/TimeHelpers';\r\n\r\nimport CourseScanStyle from '../../../css/courses/creatorView/CourseScanStyle';\r\nimport '../../../css/courses/creatorView/CourseScan.css';\r\n\r\nclass CourseScan extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n        this.countTimeLeft = this.countTimeLeft.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.renderResults();\r\n\r\n        this.interval = setInterval(() => {\r\n            this.renderResults();\r\n        }, 15000);\r\n\r\n        this.countTimeLeft();\r\n        let countTimeLeft = window.setInterval(this.countTimeLeft,1000);\r\n        window.sessionStorage.setItem('countTimeLeft', countTimeLeft);\r\n\r\n        CourseScanStyle(this.props.course.checkPointNo);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        CourseScanStyle(this.props.course.checkPointNo);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"courseScan\" className='courseScan px-sm-5 pt-5'>\r\n                <h2 className='mt-5'>Live Results</h2>\r\n                <h4 className='mb-5'>( {this.state.timeLeft} )</h4>\r\n                <div id=\"resultsChart\" className='resultsChart'>{this.state.content}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderResults(){\r\n        let course = this.props.course;\r\n\r\n        let helpers = new SubmitDataHelpers;\r\n        helpers.postData('/results/getResults/', \r\n        {\r\n            event: this.props.course.event,\r\n            type: this.props.course.type,\r\n        }).then((res) => {\r\n            //console.log(res); // JSON data parsed by `response.json()` call\r\n            if(res.error){\r\n                //console.log(res.error);\r\n                showAlert(res.error, 5000);\r\n            } else {\r\n                let sortingHelpers = new SortingHelpers;\r\n\r\n                let highestScanNo = sortingHelpers.findMax(res, 'scanNo').scanNo;\r\n\r\n                let tr = [];\r\n                \r\n                while (highestScanNo > 0){\r\n                    let results = [];\r\n\r\n                    res.forEach(r => {\r\n                        if(r.scanNo == highestScanNo){\r\n                            results.push(r);\r\n                        }\r\n                    })\r\n\r\n                    let count = 0;\r\n                    while(results.length > 0){\r\n                        let td = [];\r\n                        \r\n                        let minResult = sortingHelpers.findMin(results, 'timeTaken');\r\n                        //let shortestTimeTaken = minResult.timeTaken;\r\n\r\n                        let timeHelpers = new TimeHelpers();\r\n                        let finalTimeTaken = timeHelpers.sToHms(minResult.timeTaken).short;\r\n\r\n                        td.push(\r\n                            <div key={minResult.username} className='label d-sm-flex flex-sm-row justify-content-sm-end align-items-sm-center td col-sm-4 m-0 p-0 text-left text-sm-right'>\r\n                                {minResult.username}<b></b>\r\n                                {window.innerWidth > 576? '' : <br/>}\r\n                                <div className='text-sm-center px-sm-3 mb-sm-0 d-sm-flex justify-content-sm-center align-items-sm-center'><b>\r\n                                    {finalTimeTaken}\r\n                                    <br/>{course.type == 'Score'? ' (Points: ' + minResult.score + ')' : ''}\r\n                                </b></div>\r\n                            </div>\r\n                        );\r\n\r\n                        let sortedRes = [];\r\n\r\n                        res.forEach(r => {\r\n                            if(r.username === minResult.username){\r\n                                sortedRes.push(r);\r\n                            }\r\n                        });\r\n                        \r\n                        sortedRes = sortingHelpers.quickSort(sortedRes, 0, sortedRes.length - 1, 'scanNo');\r\n                        let bar = [];\r\n                        sortedRes.forEach(r => {\r\n                            let h = parseInt(r.timeTaken/3600);\r\n                            let m = parseInt((r.timeTaken - h*3600)/60);\r\n                            let s = r.timeTaken - h * 3600 - m * 60;\r\n\r\n                            h = h < 10? '0' + h : h;\r\n                            h = h == 0? '' : h + ':';\r\n                            m = m < 10? '0' + m + ':': m + ':';\r\n                            s = s < 10? '0' + s : s;\r\n                            let timeTaken = h + m + s;\r\n                            \r\n                            bar.push(\r\n                                <div key={timeTaken} className='checkpoint tooltips d-flex align-items-center'>\r\n                                    <div className=''></div>\r\n                                    <span className=\"tooltiptext px-3 py-3\">\r\n                                        Number of Scans: {r.scanNo}\r\n                                        <br/>Score: {r.score}\r\n                                        <br/>Time Taken: {timeTaken}\r\n                                        <br/>Speed: {(new TimeHelpers).sToHms(r.speed).short}\r\n                                    </span>\r\n                                </div>\r\n                            );\r\n                            \r\n                        });\r\n                        \r\n                        td.push(\r\n                            <div key={minResult.username + 'bar'} className='td bar col-sm-8 p-0 text-left d-flex align-items-center'>\r\n                                {bar}\r\n                            </div>\r\n                        );\r\n\r\n                        tr.push(\r\n                            <div key={minResult.username + 'tr'} className='tr col-12 row p-0 m-0 pt-2'>{td}</div>\r\n                        );\r\n                        \r\n                        for(let i = res.length -1; i >= 0; i--){\r\n                            let r = res[i];\r\n                            \r\n                            if(r.username === minResult.username){\r\n                                res.splice(res.indexOf(r), 1);\r\n                                \r\n                            }\r\n                        }\r\n                        //console.log(res);\r\n                        results.splice(results.indexOf(minResult), 1);\r\n                        \r\n                        count++;\r\n                        if(count > 1000){\r\n                            //console.log(\"end\");\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    highestScanNo--;\r\n                }\r\n\r\n                let content = [];\r\n\r\n                content.push(\r\n                    <div key='table' className='table col-10 col-sm-12'>\r\n                        <div className='tbody'>\r\n                            {tr}\r\n                        </div>\r\n                    </div>\r\n                )\r\n                \r\n                this.setState({content: content});\r\n            }\r\n        });\r\n    }\r\n\r\n    countTimeLeft(){\r\n        let endTime = this.props.course.endTime;\r\n\r\n        endTime = endTime.split(\":\");\r\n        endTime = endTime[0]*3600 + endTime[1]*60;\r\n        \r\n        let date = new Date();\r\n        let currentTime =  date.getHours()*3600 + date.getMinutes()*60 + date.getSeconds();\r\n    \r\n        let timeLeft = endTime - currentTime;\r\n\r\n        let h = parseInt(timeLeft/3600);\r\n        let m = parseInt((timeLeft - h*3600)/60);\r\n        let s = timeLeft - h * 3600 - m * 60;\r\n\r\n        h = h < 10? '0' + h : h;\r\n        h = h == 0? '' : h + ' : ';\r\n        m = m < 10? '0' + m + ' : ': m + ' : ';\r\n        s = s < 10? '0' + s : s;\r\n        \r\n        timeLeft = h + m + s;\r\n\r\n        this.setState({timeLeft: timeLeft});\r\n    }\r\n}\r\n\r\nexport default CourseScan;","import {eId, eClass, darkLightMode, randomColor} from '../../../components/helpers/StylingHelpers';\n\nfunction CourseScanStyle(checkPointNo){\n    setDarkLightMode();\n    setStyle(checkPointNo);\n\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    if (!(/android/i.test(userAgent))) {\n        window.addEventListener('resize', function(){\n            setStyle(checkPointNo);\n        });\n    }\n}\n\nexport default CourseScanStyle;\n\nfunction setDarkLightMode(){\n    darkLightMode('courseScan');\n}\n\nfunction setStyle(checkPointNo){\n    eId('courseScan').style.height = eId('nav').offsetTop - eId('courseScan').offsetTop + 'px';\n    eId('resultsChart').style.height = eId('nav').offsetTop - eId('resultsChart').offsetTop + 'px';\n\n    setBar(checkPointNo);\n}\n\nfunction setBar(checkPointNo){\n    if(!eClass('bar')){\n        return false;\n    }\n\n    let bars = eClass('bar');\n    \n    for(let i = 0; i < bars.length; i++) {\n        let checkpoints = bars[i].getElementsByClassName('checkpoint');\n        \n        for(let j = 0; j < checkpoints.length; j++) {\n            checkpoints[j].style.width = bars[i].offsetWidth/(parseInt(checkPointNo) + 1) + 'px';\n            checkpoints[j].style.height = '15px';\n            \n            if(j == 0){\n                checkpoints[j].style.borderLeft = '2px solid #5aa2f9';\n            }\n            \n            if(j == checkpoints.length - 1){\n                checkpoints[j].style.borderRight = '2px solid #5aa2f9';\n                checkpoints[j].getElementsByTagName('div')[0].style.borderRight = 0;\n            }\n\n            checkpoints[j].onmouseenter = function(){\n                window.sessionStorage.setItem('showTooltip', '1');\n                setTooltip(checkpoints[j]);\n            }\n\n            checkpoints[j].onmouseleave = function(){\n                window.sessionStorage.removeItem('showTooltip');\n                setTooltip(checkpoints[j]);\n            };\n            \n        }\n    }\n}\n\nfunction setTooltip(checkpoint){\n    let tooltip = checkpoint.getElementsByClassName('tooltiptext')[0];\n    \n    if(window.sessionStorage.showTooltip == 1){\n        tooltip.style.top = tooltip.offsetTop - tooltip.offsetHeight * 0.7 - eClass('tbody')[0].scrollTop + 'px';\n        tooltip.style.left = tooltip.offsetLeft - tooltip.offsetWidth * 0.1 - eClass('tbody')[0].scrollLeft + 'px';\n        tooltip.style.visibility = 'visible';\n    } else {\n        tooltip.style.top = 'initial';\n        tooltip.style.left = 'initial';\n        tooltip.style.visibility = 'hidden';\n    }\n}"],"sourceRoot":""}