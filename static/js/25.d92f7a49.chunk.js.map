{"version":3,"sources":["components/helpers/SortingHelpers.js","components/results/creatorView/ResultList.js"],"names":["SortingHelpers","swap","items","leftIndex","rightIndex","temp","valueOf","item","ref","re","split","i","forEach","r","prototype","findMax","max","val","Number","findMin","min","quickSort","left","right","index","length","pivot","Math","floor","l","partition","ResultList","props","state","console","log","this","date","Date","today","getFullYear","getMonth","getDate","getHours","getMinutes","SubmitDataHelpers","postData","then","res","error","React","Component"],"mappings":"uHAAMA,E,kCAmFN,SAASC,EAAKC,EAAOC,EAAWC,GAC5B,IAAIC,EAAOH,EAAMC,GACjBD,EAAMC,GAAaD,EAAME,GACzBF,EAAME,GAAcC,EAGxB,SAASC,EAAQC,EAAMC,GACnB,IAAIC,EAAKD,EAAIE,MAAM,KACfC,EAAIJ,EAMR,OAJAE,EAAGG,SAAQ,SAAAC,GACPF,EAAIA,EAAEE,MAGHF,EA7FIX,YAEfA,EAAec,UAAUC,QAAU,SAAiBb,EAAOM,GACvD,IAAIQ,EACAL,EAgBJ,OAdAT,EAAMU,SAAQ,SAAAL,GACV,IAAIU,EAAMC,OAAOZ,EAAQC,EAAMC,KAErB,MAAPQ,GAIIA,EAAMC,KAHTD,EAAMC,EACNN,EAAIJ,MASLI,GAGXX,EAAec,UAAUK,QAAU,SAAiBjB,EAAOM,GACvD,IAAIY,EACAT,EAAI,EAgBR,OAdAT,EAAMU,SAAQ,SAAAL,GACV,IAAIU,EAAMC,OAAOZ,EAAQC,EAAMC,KAErB,MAAPY,GAIIA,EAAMH,KAHTG,EAAMH,EACNN,EAAIJ,MASLI,GAGXX,EAAec,UAAUO,UAAY,SAASA,EAAUnB,EAAOoB,EAAMC,EAAOf,GACxE,IAAIgB,EAWJ,OAVItB,EAAMuB,OAAS,IAEXH,GADJE,EAYR,SAAmBtB,EAAOoB,EAAMC,EAAOf,GACnC,IAAIkB,EAAUxB,EAAMyB,KAAKC,OAAOL,EAAQD,GAAQ,IAC5CO,EAAUP,EACVT,EAAUU,EACd,KAAOM,GAAKhB,GAAG,CACX,KAAOP,EAAQJ,EAAM2B,GAAIrB,GAAOF,EAAQoB,EAAOlB,IAC3CqB,IAEJ,KAAOvB,EAAQJ,EAAMW,GAAIL,GAAOF,EAAQoB,EAAOlB,IAC3CK,IAEAgB,GAAKhB,IACLZ,EAAKC,EAAO2B,EAAGhB,GACfgB,IACAhB,KAGR,OAAOgB,EA7BKC,CAAU5B,EAAOoB,EAAMC,EAAOf,IACnB,GACfa,EAAUnB,EAAOoB,EAAME,EAAQ,EAAGhB,GAElCgB,EAAQD,GACRF,EAAUnB,EAAOsB,EAAOD,EAAOf,IAIhCN,I,iGCxDL6B,G,wDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,GAFC,E,gEAMdC,QAAQC,IAAIC,KAAKJ,OACjB,IAAIK,EAAO,IAAIC,KACXC,EAAQF,EAAKG,cAAgB,KAAOH,EAAKI,WAAW,EAAG,KAAOJ,EAAKI,WAAW,GAAIJ,EAAKI,WAAa,GAAK,IAAMJ,EAAKK,UACtGL,EAAKM,WACHN,EAAKO,cAEX,IAAIC,WACVC,SAAS,oCACjB,CACIP,MAAOA,IACRQ,MAAK,SAACC,GACFA,EAAIC,MACHf,QAAQC,IAAIa,EAAIC,OAEhBf,QAAQC,IAAIa,Q,6HAcpB,OAAO,S,GAnCUE,IAAMC,YAuChBpB","file":"static/js/25.d92f7a49.chunk.js","sourcesContent":["class SortingHelpers{\r\n\r\n}\r\n\r\nexport default SortingHelpers;\r\n\r\nSortingHelpers.prototype.findMax = function findMax(items, ref){\r\n    let max;\r\n    let i;\r\n\r\n    items.forEach(item => {\r\n        let val = Number(valueOf(item, ref));\r\n\r\n        if(max == null){\r\n            max = val;\r\n            i = item;\r\n        } else {\r\n            if(max < val){\r\n                max = val;\r\n                i = item;\r\n            }\r\n        }\r\n    });\r\n\r\n    return i;\r\n}\r\n\r\nSortingHelpers.prototype.findMin = function findMin(items, ref){\r\n    let min;\r\n    let i = 0;\r\n\r\n    items.forEach(item => {\r\n        let val = Number(valueOf(item, ref));\r\n        \r\n        if(min == null){\r\n            min = val;\r\n            i = item;\r\n        } else {\r\n            if(min > val){\r\n                min = val;\r\n                i = item;\r\n            }\r\n        }\r\n    });\r\n\r\n    return i;\r\n}\r\n\r\nSortingHelpers.prototype.quickSort = function quickSort(items, left, right, ref){\r\n    var index;\r\n    if (items.length > 1) {\r\n        index = partition(items, left, right, ref); //index returned from partition\r\n        if (left < index - 1) { //more elements on the left side of the pivot\r\n            quickSort(items, left, index - 1, ref);\r\n        }\r\n        if (index < right) { //more elements on the right side of the pivot\r\n            quickSort(items, index, right, ref);\r\n        }\r\n    }\r\n    \r\n    return items;\r\n}\r\n\r\nfunction partition(items, left, right, ref) {\r\n    var pivot   = items[Math.floor((right + left) / 2)], ref, //middle element\r\n        l       = left, //left pointer\r\n        r       = right; //right pointer\r\n    while (l <= r) {\r\n        while (valueOf(items[l], ref) < valueOf(pivot, ref)) {\r\n            l++;\r\n        }\r\n        while (valueOf(items[r], ref) > valueOf(pivot, ref)) {\r\n            r--;\r\n        }\r\n        if (l <= r) {\r\n            swap(items, l, r); //sawpping two elements\r\n            l++;\r\n            r--;\r\n        }\r\n    }\r\n    return l;\r\n}\r\n\r\nfunction swap(items, leftIndex, rightIndex){\r\n    var temp = items[leftIndex];\r\n    items[leftIndex] = items[rightIndex];\r\n    items[rightIndex] = temp;\r\n}\r\n\r\nfunction valueOf(item, ref){\r\n    let re = ref.split('/');\r\n    let i = item;\r\n\r\n    re.forEach(r => {\r\n        i = i[r];\r\n    })\r\n\r\n    return i;\r\n}","import React from 'react';\r\nimport SubmitDataHelpers from '../../helpers/SubmitDataHelpers';\r\nimport SortingHelpers from '../../helpers/SortingHelpers';\r\n\r\nclass ResultList extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n        let date = new Date();\r\n        let today = date.getFullYear() + '-' + (date.getMonth()<9? '0' + (date.getMonth()+1): date.getMonth() + 1) + '-' + date.getDate();\r\n        let currentHour = date.getHours();\r\n        let currentMinute = date.getMinutes();\r\n\r\n        let helpers = new SubmitDataHelpers;\r\n        helpers.postData('/events/getClosedEventsAsCreator/', \r\n        {\r\n            today: today,\r\n        }).then((res) => {\r\n            if(res.error){\r\n                console.log(res.error);\r\n            } else {\r\n                console.log(res);\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    componentDidUpdate(){\r\n\r\n    }\r\n\r\n    render(){\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default ResultList;"],"sourceRoot":""}